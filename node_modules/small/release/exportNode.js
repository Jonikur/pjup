var __extends = this.__extends || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    __.prototype = b.prototype;
    d.prototype = new __();
};
/// <reference path="../definitions/ref.d.ts" />
var uglify = require('uglify-js');

(function (Style) {
    Style[Style["Exports"] = 0] = "Exports";
    Style[Style["ModuleExports"] = 1] = "ModuleExports";
    Style[Style["This"] = 2] = "This";
})(exports.Style || (exports.Style = {}));
var Style = exports.Style;

var Export = (function () {
    function Export() {
    }
    return Export;
})();
exports.Export = Export;

var SingleExport = (function (_super) {
    __extends(SingleExport, _super);
    function SingleExport() {
        _super.apply(this, arguments);
    }
    Object.defineProperty(SingleExport.prototype, "def", {
        get: function () {
            return getDefFromNode(this.astRight);
        },
        enumerable: true,
        configurable: true
    });
    return SingleExport;
})(Export);
exports.SingleExport = SingleExport;

var FullExport = (function (_super) {
    __extends(FullExport, _super);
    function FullExport() {
        _super.apply(this, arguments);
        this.style = 1 /* ModuleExports */;
    }
    Object.defineProperty(FullExport.prototype, "def", {
        get: function () {
            return getDefFromNode(this.astRight);
        },
        enumerable: true,
        configurable: true
    });
    return FullExport;
})(Export);
exports.FullExport = FullExport;

function getDefFromNode(ast) {
    if (ast instanceof uglify.AST_SymbolRef) {
        return ast.thedef;
    }
    return undefined;
}

/**
* An export like:
* (function(exp) { exp.someVar = 'someValue' })(exports);
*/
var UnknownExport = (function (_super) {
    __extends(UnknownExport, _super);
    function UnknownExport() {
        _super.apply(this, arguments);
    }
    return UnknownExport;
})(Export);
exports.UnknownExport = UnknownExport;
