var __extends = this.__extends || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    __.prototype = b.prototype;
    d.prototype = new __();
};
(function (OutputStyle) {
    /**
    * A closure.
    * Only used when a file is imported once
    */
    OutputStyle[OutputStyle["SINGLE"] = 0] = "SINGLE";

    /**
    * A first load.
    * Example:
    * require('events')
    * becomes
    * (__bundle$_1 = [...]);
    */
    OutputStyle[OutputStyle["VAR_ASSIGN"] = 1] = "VAR_ASSIGN";

    /**
    * A module variable reference.
    * Example:
    * require('events') becomes __bundle$_1
    */
    OutputStyle[OutputStyle["VAR_REFERENCE"] = 2] = "VAR_REFERENCE";

    /**
    * Rename the variable to which the import is assigned to.
    * Example:
    *    var events = require('events');
    *    ... events ...
    * becomes
    *
    *    ... __bundle$_1 ...
    */
    OutputStyle[OutputStyle["VAR_RENAME"] = 3] = "VAR_RENAME";

    /**
    * Combines VAR_ASSIGN and VAR_RENAME
    */
    OutputStyle[OutputStyle["VAR_ASSIGN_AND_RENAME"] = 4] = "VAR_ASSIGN_AND_RENAME";
})(exports.OutputStyle || (exports.OutputStyle = {}));
var OutputStyle = exports.OutputStyle;

var Import = (function () {
    function Import() {
    }
    return Import;
})();
exports.Import = Import;

/**
* An import like "var uglify = require('uglify-js');"
*/
var SimpleImport = (function (_super) {
    __extends(SimpleImport, _super);
    function SimpleImport() {
        _super.apply(this, arguments);
        this.dotArray = [];
    }
    return SimpleImport;
})(Import);
exports.SimpleImport = SimpleImport;
